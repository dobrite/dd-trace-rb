# Common variables, containers, jobs and steps.
job_defaults: &job_defaults
  working_directory: /app
  shell: /bin/bash --login

ruby_containers: &ruby_containers
  - &container_defaults
      environment:
        - BUNDLE_GEMFILE=/app/Gemfile
  - &container-1_9
    <<: [ image: 'datadog/docker-library:ddtrace_rb_1_9_3', *container_defaults ]
  - &container-2_0
    <<: [ image: 'datadog/docker-library:ddtrace_rb_2_0_0', *container_defaults ]
  - &container-2_1
    <<: [ image: 'datadog/docker-library:ddtrace_rb_2_1_10', *container_defaults ]
  - &container-2_2
    <<: [ image: 'datadog/docker-library:ddtrace_rb_2_2_10', *container_defaults ]
  - &container-2_3
    <<: [ image: 'datadog/docker-library:ddtrace_rb_2_3_7', *container_defaults ]
  - &container-2_4
    <<: [ image: 'datadog/docker-library:ddtrace_rb_2_4_4', *container_defaults ]

test_containers: &test_containers
  - &container_postgres
    image: circleci/postgres:9.6-alpine-ram
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
  - &container_mysql
    image: circleci/mysql:5.6-ram
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=mysql
      - MYSQL_USER=mysql
  - &container_elasticsearch
    image: elasticsearch:2.4
  - &container_redis
    image: circleci/redis:3
  - &container_mongo
    image: circleci/mongo:3.5-ram
  - &container_memcached
    image: memcached:1.5-alpine
  - &container_agent
    image: datadog/docker-dd-agent:latest-alpine
    environment:
      - DD_APM_ENABLED=true
      - DD_BIND_HOST=0.0.0.0
      - DD_API_KEY=invalid_key_but_this_is_fine

version: 2.0

job_aliases:
  - &default_workspace
      at: /app
  - &docker_test_environment
      environment:
        - TEST_DATADOG_INTEGRATION: 1
  - &bundler_init
      name: Initializing Bundler vendor path
      command: bundle --path vendor/bundle
  - &build_files
      root: .
      key: 'betav7-bundle-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Gemfile" }}-{{ checksum "ddtrace.gemspec" }}-{{ checksum "Appraisals" }}'
      paths:
        - vendor/bundle
        - gemfiles/
        - Gemfile.lock
  - &wait_for_postgres
      name: Waiting for Postgres to be ready
      command: |
        for i in `seq 1 30`;
        do
          nc -z localhost 5432 && echo Success && exit 0
          echo -n .
          sleep 1
        done
        echo Failed waiting for Postgres && exit 1
  - &test_base
      <<: *job_defaults
      steps:
        - checkout
        - attach_workspace: *default_workspace
        - run: *bundler_init
        - run: *wait_for_postgres
        - run:
            name: Run tests
            command: bundle exec rake ci
  - &build_base
    <<: *job_defaults
    steps:
      - checkout
      - attach_workspace: *default_workspace
      - restore_cache: *build_files
      - run: *bundler_init
      - run: &bundle_install
          name: Install gem dependencies
          command: bundle install
      - run:
          name: Install Appraisal gems
          command: bundle exec appraisal install
      - save_cache: *build_files
      - persist_to_workspace: *build_files

jobs:
  "static analysis":
    <<: *job_defaults
    docker: [ *container-2_3 ]
    steps:
      - checkout
      - attach_workspace: *default_workspace
      - run: *bundler_init
      - run:
          name: Delint with Rubocop
          command: bundle exec rake rubocop
  "deploy release":
    <<: *job_defaults
    docker: [ *container-2_3 ]
    steps:
      - checkout
      - attach_workspace: *default_workspace
      - run: *bundler_init
      - run:
          name: Install AWS cli
          command: |
            apt-get -y -qq update
            apt-get -y -qq install awscli
      - run:
          name: Upload release docs
          command: S3_DIR=trace bundle exec rake release:docs
  "(1.9) build": { <<: [ *build_base, docker: [ *container-1_9 ] ] }
  "(2.0) build": { <<: [ *build_base, docker: [ *container-2_0 ] ] }
  "(2.1) build": { <<: [ *build_base, docker: [ *container-2_1 ] ] }
  "(2.2) build": { <<: [ *build_base, docker: [ *container-2_2 ] ] }
  "(2.3) build": { <<: [ *build_base, docker: [ *container-2_3 ] ] }
  "(2.4) build": { <<: [ *build_base, docker: [ *container-2_4 ] ] }
  "(1.9) test":
    <<: *test_base
    docker:
      - <<: [ *container-1_9, *docker_test_environment ]
      - *container_postgres
      - *container_mysql
      - *container_elasticsearch
      - *container_redis
      - *container_mongo
      - *container_memcached
      - *container_agent
  "(2.0) test":
    <<: *test_base
    docker:
      - <<: [ *container-2_0, *docker_test_environment ]
      - *container_postgres
      - *container_mysql
      - *container_elasticsearch
      - *container_redis
      - *container_mongo
      - *container_memcached
      - *container_agent
  "(2.1) test":
    <<: *test_base
    docker:
      - <<: [ *container-2_1, *docker_test_environment ]
      - *container_postgres
      - *container_mysql
      - *container_elasticsearch
      - *container_redis
      - *container_mongo
      - *container_memcached
      - *container_agent
  "(2.2) test":
    <<: *test_base
    docker:
      - <<: [ *container-2_2, *docker_test_environment ]
      - *container_postgres
      - *container_mysql
      - *container_elasticsearch
      - *container_redis
      - *container_mongo
      - *container_memcached
      - *container_agent
  "(2.3) test":
    <<: *test_base
    docker:
      - <<: [ *container-2_3, *docker_test_environment ]
      - *container_postgres
      - *container_mysql
      - *container_elasticsearch
      - *container_redis
      - *container_mongo
      - *container_memcached
      - *container_agent
  "(2.4) test":
    <<: *test_base
    docker:
      - <<: [ *container-2_4, *docker_test_environment ]
      - *container_postgres
      - *container_mysql
      - *container_elasticsearch
      - *container_redis
      - *container_mongo
      - *container_memcached
      - *container_agent
  "(1/2) benchmark": &benchmark
    <<: *job_defaults
    docker:
      - <<: [ *container-2_3, *docker_test_environment ]
      - *container_postgres
      - *container_redis
      - *container_agent
    parallelism: 1
    steps:
      - checkout
      - attach_workspace: *default_workspace
      - run: *bundler_init
      - run: *wait_for_postgres
      - run:
          name: Run sidekiq benchmark
          command: bash .circleci/run_benchmark.sh tmp/benchmarks sidekiq_test
      - persist_to_workspace:
          root: .
          paths:
            - 'tmp/benchmarks/**/*.csv'
  "(2/2) benchmark": *benchmark
  "aggregate benchmarks":
    <<: *job_defaults
    docker: [ *container-2_3 ]
    steps:
      - checkout
      - attach_workspace: *default_workspace
      - run: *bundler_init
      - store_artifacts:
          path: tmp/benchmarks
      - run:
          name: Sidekiq benchmark results
          command: bundle exec ruby .circleci/process_benchmarks.rb tmp/benchmarks/sidekiq_test/*.csv

wf_aliases:
  - &filters_all_branches_and_tags
    filters:
      tags:
        only: /.*/
  - &filters_only_release_tags
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v\d+(\.\d+){0,3}(\.(alpha|beta|rc)\d+)?$/
  - &default_workflow
    <<: *filters_all_branches_and_tags

workflows:
  version: 2
  benchmark:
    jobs:
      - "perform additional tests":
          <<: *default_workflow
          type: approval
      - "(2.3) build":
          <<: *default_workflow
          requires: [ "perform additional tests" ]
      - "(1/2) benchmark": &benchmark_workflow
          <<: *default_workflow
          requires: [ "(2.3) build" ]
      - "(2/2) benchmark": *benchmark_workflow
      - "aggregate benchmarks":
          <<: *default_workflow
          requires:
            - "(1/2) benchmark"
            - "(2/2) benchmark"
  build-and-test:
    jobs:
#      - "(1.9) build": *default_workflow
#      - "(2.0) build": *default_workflow
#      - "(2.1) build": *default_workflow
#      - "(2.2) build": *default_workflow
      - "(2.3) build": *default_workflow
#      - "(2.4) build": *default_workflow
#      - "(1.9) test": { <<: [ *default_workflow, requires: [ "(1.9) build" ] ] }
#      - "(2.0) test": { <<: [ *default_workflow, requires: [ "(2.0) build" ] ] }
#      - "(2.1) test": { <<: [ *default_workflow, requires: [ "(2.1) build" ] ] }
#      - "(2.2) test": { <<: [ *default_workflow, requires: [ "(2.2) build" ] ] }
#      - "(2.3) test": { <<: [ *default_workflow, requires: [ "(2.3) build" ] ] }
#      - "(2.4) test": { <<: [ *default_workflow, requires: [ "(2.4) build" ] ] }
      - "static analysis": { <<: [ *default_workflow, requires: [ "(2.3) build" ] ] }
      - "deploy release":
          <<: *filters_only_release_tags
          requires:
            - "(2.3) build"
#            - "(1.9) test"
#            - "(2.0) test"
#            - "(2.1) test"
#            - "(2.2) test"
#            - "(2.3) test"
#            - "(2.4) test"
