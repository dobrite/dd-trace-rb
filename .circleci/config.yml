# Common variables, containers, jobs and steps.
job_defaults: &job_defaults
  working_directory: /app
  shell: /bin/bash --login

ruby_containers: &ruby_containers
  - &container-1_9
    image: datadog/docker-library:ddtrace_rb_1_9_3
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile
  - &container-2_0
    image: datadog/docker-library:ddtrace_rb_2_0_0
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile
  - &container-2_1
    image: datadog/docker-library:ddtrace_rb_2_1_10
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile
  - &container-2_2
    image: datadog/docker-library:ddtrace_rb_2_2_10
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile
  - &container-2_3
    image: datadog/docker-library:ddtrace_rb_2_3_7
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile
  - &container-2_4
    image: datadog/docker-library:ddtrace_rb_2_4_4
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile

test_containers: &test_containers
  - &container_postgres
    image: postgres:9.6
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
  - &container_mysql
    image: mysql:5.6
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=mysql
      - MYSQL_USER=mysql
  - &container_elasticsearch
    image: elasticsearch:2.4
  - &container_redis
    image: redis:3.0
  - &container_mongo
    image: mongo:3.5
  - &container_memcached
    image: memcached:1.5-alpine
  - &container_agent
    image: datadog/docker-dd-agent
    environment:
      - DD_APM_ENABLED=true
      - DD_BIND_HOST=0.0.0.0
      - DD_API_KEY=invalid_key_but_this_is_fine

step_init_bundle_checksum: &step_init_bundle_checksum
  run:
    name: Initialize bundle cache key
    command: |
      touch .circleci/bundle_checksum
step_bundle_install: &step_bundle_install
  run:
    name: Install gem dependencies
    command: bundle install
step_rubocop: &step_rubocop
  run:
    name: Delint with Rubocop
    command: bundle exec rake rubocop
step_appraisal_install: &step_appraisal_install
  run:
    name: Install Appraisal gems
    command: bundle exec appraisal install
step_compute_bundle_checksum: &step_compute_bundle_checksum
  run:
    name: Compute bundle checksum
    command: |
      cat Gemfile.lock gemfiles/*.gemfile.lock > .circleci/bundle_checksum
step_run_all_tests: &step_run_all_tests
  run:
    name: Run tests
    command: bundle exec rake ci
step_release_docs: &step_release_docs
  run:
    name: Upload release docs
    command: S3_DIR=trace bundle exec rake release:docs

filters_all_branches_and_tags: &filters_all_branches_and_tags
  filters:
    tags:
      only: /.*/
filters_only_release_tags: &filters_only_release_tags
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v\d+(\.\d+){0,3}(\.(alpha|beta|rc)\d+)?$/

version: 2.0

aliases:
  - &docker_test_environment
      environment:
        - TEST_DATADOG_INTEGRATION: 1
  - &test_dockerss
    - *container_postgres
    - *container_mysql
    - *container_elasticsearch
    - *container_redis
    - *container_mongo
    - *container_memcached
    - *container_agent
  - &docker-1_9sss
    - <<: *container-1_9

  - &bundler_init
      name: Initializing Bundler vendor path
      command: bundle --path vendor/bundle
  - &build_files
      root: .
      key: 'betav7-bundle-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Gemfile" }}-{{ checksum "ddtrace.gemspec" }}-{{ checksum "Appraisals" }}'
      paths:
        - vendor/bundle
        - gemfiles/
        - Gemfile.lock
  - &wait_for_postgres
      name: Waiting for Postgres to be ready
      command: |
        for i in `seq 1 30`;
        do
          nc -z localhost 5432 && echo Success && exit 0
          echo -n .
          sleep 1
        done
        echo Failed waiting for Postgres && exit 1
  - &test_base
      <<: *job_defaults
      steps:
        - checkout
        - attach_workspace:
           at: /app
        - run: *bundler_init
        - run: *wait_for_postgres
        - *step_run_all_tests
  - &build_base
    <<: *job_defaults
    steps:
      - checkout
      - attach_workspace:
         at: /app
      - restore_cache: *build_files
      - run: *bundler_init
      - *step_bundle_install
      - *step_appraisal_install
      - save_cache: *build_files
      - persist_to_workspace: *build_files

jobs:
  "(1.9) build":
    <<: *build_base
    docker: [ *container-1_9 ]

  "(1.9) test":
    <<: *test_base
    docker:
      - <<: [ *container-1_9, *docker_test_environment ]
      - *container_postgres
      - *container_mysql
      - *container_elasticsearch
      - *container_redis
      - *container_mongo
      - *container_memcached
      - *container_agent

  deploy-release:
    <<: *job_defaults
    docker:
      - *container-2_4
    steps:
      - checkout
      - run:
          command: |
            apt-get -y -qq update
            apt-get -y -qq install awscli
      - *step_bundle_install
      - *step_release_docs

workflows:
  aliases:
    - &job_default
      <<: *filters_all_branches_and_tags
  version: 2
  build-and-test:
    jobs:
      - "(1.9) test":
          requires: "(1.9) build"
      - "(1.9) build": *job_default
      - deploy-release:
          <<: *filters_only_release_tags
          requires:
            - test-1.9

